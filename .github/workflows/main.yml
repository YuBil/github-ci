name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts
        
      - name: Run APP with endpoint
        run: node index.js &

      - name: openapi-2 *** Run Dredd
        run: |
          docker run --rm -v ${PWD}:/api -w /api --network host apiaryio/dredd \
            dredd swagger-build/openapi-2.yml http://localhost:3000

      - name: openapi-3 *** Run Dredd for OA-3 sample with syntax compatible with OA-2
        run: |
          docker run --rm -v ${PWD}:/api -w /api --network host apiaryio/dredd \
            dredd swagger-build/openapi-3.yml http://localhost:3000

      - name: Install & run parser openapi-3 => openapi-2 (schema has broken compatibility elements)
        run: |
          npm install --save api-spec-converter
          node_modules/.bin/api-spec-converter --from=openapi_3 --to=swagger_2 --syntax=yaml --order=alpha \
            swagger-build/openapi-3-oneOf.yml > swagger-build/openapi-3-parsed.yml

      - name: openapi-3 => openapi-2 *** Run Dredd for parsed file
        run: |
          docker run --rm -v ${PWD}:/api -w /api --network host apiaryio/dredd \
            dredd swagger-build/openapi-3-parsed.yml http://localhost:3000

      -